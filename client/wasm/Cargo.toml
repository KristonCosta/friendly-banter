[package]
name = "wasm"
version = "0.1.0"
authors = ["kriston"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
crate-type = ["cdylib"]
path = "src/lib.rs"

[features]
default = ["console_error_panic_hook"]

[dependencies]
js-sys = "0.3.45"
bitvec = "0.19.3"
wasm-bindgen-futures = "0.4.18"
tracing = "0.1.21"
tracing-wasm = "0.1.0"
futures = "0.3"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.wasm-bindgen]
version = "0.2.63"
features = ["nightly"]

[dependencies.web-sys]
version = "0.3"
features = [
  "console",
  "MessageEvent",
  "RtcPeerConnection",
  "RtcSignalingState",
  "RtcSdpType",
  "RtcSessionDescriptionInit",
  "RtcPeerConnectionIceEvent",
  "RtcIceCandidate",
  "RtcDataChannel",
  "RtcDataChannelInit",
  "RtcDataChannelEvent",
  "RtcDataChannelType", 
  "XmlHttpRequest",
  "RtcPeerConnection", 
  "RtcSessionDescription",
  "XmlHttpRequestResponseType", 
  "RtcIceCandidate", 
  "RtcIceCandidateInit"
]

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-O3", "--enable-mutable-globals"]

[profile.release]
opt-level = "s"
